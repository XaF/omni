name: Run tests

on:
  push:
    branches:
      - main
      - dev
  pull_request:


concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true


jobs:
  install-script:
    name: Automated installation on ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest

    runs-on: ${{ matrix.os }}
    timeout-minutes: 20

    steps:
      - name: Checkout current commit
        uses: actions/checkout@v3

      - name: Prepare environment
        run: |
          echo "OMNIDIR=${GITHUB_WORKSPACE}" | tee -a "$GITHUB_ENV"
          echo "OMNI_GIT=${HOME}/git" | tee -a "$GITHUB_ENV"

      - name: Run install script
        timeout-minutes: 10
        run: |
          ./install.sh \
            --no-interactive \
            --repo-path-format "%{host}/%{org}/%{repo}" \
            --bashrc "$HOME/omni.bashrc" \
            --zshrc "$HOME/omni.zshrc"

      - name: Check the content of the generated bashrc
        run: |
          cat "$HOME/omni.bashrc"

      - name: Check the content of the generated zshrc
        run: |
          cat "$HOME/omni.zshrc"

      - name: Try and run omni with bash
        shell: bash
        run: |
          source "$HOME/omni.bashrc"

          echo "## Running 'status' from git directory"; echo
          omni status

          echo; echo "## Running 'status' from root directory"; echo
          cd /
          omni status

          echo; echo "## Running 'help' from root directory"; echo
          omni help

      - name: Install zsh
        if: runner.os != 'macos'
        run: |
          sudo apt-get --yes install zsh

      - name: Try and run omni with zsh
        shell: zsh {0}
        run: |
          source "$HOME/omni.zshrc"

          echo "## Running 'status' from git directory"; echo
          omni status

          echo; echo "## Running 'status' from root directory"; echo
          cd /
          omni status

          echo; echo "## Running 'help' from root directory"; echo
          omni help

      - name: Setup bats
        run: |
          bats_dir="${TMPDIR:-/tmp}/bats-core"
          git clone https://github.com/bats-core/bats-core.git "${bats_dir}"
          cd "${bats_dir}"
          ./install.sh "${HOME}/.local"

      - name: Evaluate expected test duration
        run: |
          NUM_TESTS=$(bats -c tests/)
          # This gives about 30s per test declared in bats, which should be sufficient,
          # might need to adapt as we grow the number of tests, if we see timeout failures
          echo "TEST_TIMEOUT_MINUTES=$(((${NUM_TESTS} + 1) / 2))" | tee -a "$GITHUB_ENV"

      - name: Run bats tests
        timeout-minutes: ${{ fromJSON(env.TEST_TIMEOUT_MINUTES) }}
        run: |
          bats --no-tempdir-cleanup tests/
