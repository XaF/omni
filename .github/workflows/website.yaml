# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on a push
  push:
    branches:
      - main
    paths:
      - .github/workflows/website.yaml
      - "website/**"

  # Runs on a pull request
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/website.yaml
      - "website/**"

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  # Hosted GitHub runners have 7 GB of memory available, let's use 6 GB
  NODE_OPTIONS: --max-old-space-size=6144

jobs:
  check-changed-files:
    name: Check changed files
    runs-on: ubuntu-latest

    outputs:
      deploy-website: ${{ steps.changed-files.outputs.any_modified }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed website files
        id: changed-files
        uses: tj-actions/changed-files@v37
        with:
          files: |
            .github/workflows/website.yaml
            website

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_modified_files }}; do
            echo "$file was modified"
          done


  # Single deploy job since we're just deploying
  deploy-website:
    name: Deploy static content

    needs:
      - check-changed-files
    if: needs.check-changed-files.outputs.deploy-website == 'true'

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout current commit
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: yarn
          cache-dependency-path: 'website/yarn.lock'

      - name: Install dependencies
        working-directory: website
        run: yarn install --frozen-lockfile --non-interactive

      - name: Build
        working-directory: website
        run: yarn build

      - name: Setup Pages
        if: github.event_name != 'pull_request'
        uses: actions/configure-pages@v1

      - name: Upload artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-pages-artifact@v1
        with:
          path: website/build

      - name: Deploy to GitHub Pages
        if: github.event_name != 'pull_request'
        id: deployment
        uses: actions/deploy-pages@v1
