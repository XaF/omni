#!/usr/bin/env sh
#
# This script is generated by omni to allow for a better handling
# of password requests during omni operations. It is not meant to be
# run directly by the user.

{% if not INTERACTIVE or PREFER_GUI -%}
get_password_gui() {
    if [[ -z "$OMNI_SUBCOMMAND" ]]; then
	echo "This was not called from omni" >&2
	exit 1
    fi

    local show_details=false
    local triggering_command omni_command
    local prompt prompt_base prompt_details

    triggering_command=$(ps -p $PPID -o command= | sed 's/"/\\"/g')
    omni_command="omni ${OMNI_SUBCOMMAND}"

    prompt_base="'${omni_command}' wants to run '${triggering_command}'.\\n\\nTo allow this, enter your \\\"{{ TOOL }}\\\" password."
    prompt_details="'${omni_command}' wants to run '${triggering_command}' as part of:\\n\\n{{ COMMAND | escape_multiline_command(times=2) }}\\n\\nTo allow this, enter your \\\"{{ TOOL }}\\\" password."

{%   if TOOL == "ssh" -%}
{%     set prompt = "${*:-$prompt}" -%}
{%   else -%}
{%     set prompt = "$prompt" -%}
{%   endif -%}

    if command -v osascript >/dev/null; then
	use_osascript() {
	    local output exit_code buttons

	    if [ "$show_details" = true ] || [ -n "$*" ]; then
		buttons='{"Cancel", "Ok"}'
		prompt="$prompt_details"
	    else
		buttons='{"Details", "Cancel", "Ok"}'
		prompt="$prompt_base"
	    fi

	    output=$(osascript <<EOF | tee -a /tmp/omni.log
		set dialogResult to (\
		    display dialog "{{ prompt }}" \
		    with title "Omni Password Request ({{ TOOL }})" \
		    buttons ${buttons} \
		    default button "Ok" \
		    default answer "" \
		    with icon file "System:Library:CoreServices:CoreTypes.bundle:Contents:Resources:LockedIcon.icns" \
		    with hidden answer \
		    giving up after 60 \
		)
		set buttonPressed to button returned of dialogResult
		set textReturned to text returned of dialogResult

		if buttonPressed is "Cancel" then
		    return 1
		else if buttonPressed is "Details" then
		    return 37
		else
		    return "0 " & textReturned
		end if
    EOF
    )
	    exit_code=$?
	    [ $exit_code -ne 0 ] && exit $exit_code

	    exit_code=$(echo "$output" | cut -d' ' -f1)
	    [ -z "$exit_code" ] && exit 1

	    output=$(echo "$output" | cut -d' ' -f2-)
	    [ -n "$output" ] && echo "$output"

	    if [ $exit_code -eq 37 ] && [ "$show_details" = false ]; then
		show_details=true
		use_osascript "$@"
	    else
		exit $exit_code
	    fi
	}

	use_osascript "$@"
    fi
}
{%- endif %}

{% if INTERACTIVE -%}
get_password_cli() {
{%   if TOOL == "ssh" -%}
    PROMPT="${*:-"{{ TOOL }} password:"}"
{%     set prompt = "$PROMPT" -%}
{%   else -%}
{%     set prompt = TOOL ~ " password:" -%}
{%   endif -%}
    {{ OMNI_BIN }} --askpass "{{ prompt }}" "{{ SOCKET_PATH }}"
    exit $?
}
{%- endif %}

{% if INTERACTIVE -%}
{%   if PREFER_GUI -%}
get_password_gui
{%   endif -%}
get_password_cli
{% else -%}
get_password_gui
{%- endif -%}
